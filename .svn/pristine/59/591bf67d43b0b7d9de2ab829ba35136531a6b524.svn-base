package com.example.config;

import java.sql.Date;
import java.text.SimpleDateFormat;

import android.annotation.SuppressLint;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.os.Bundle;
import android.telephony.PhoneStateListener;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import android.widget.Toast;

public class BroadcastReceiverMgr extends BroadcastReceiver {

	@SuppressLint("MissingPermission")
	@Override
	public void onReceive(final Context context, Intent intent) {
		// TODO Auto-generated method stub
		if (intent.getAction().equals(ConnectivityManager.CONNECTIVITY_ACTION)) {
			// final TelephonyManager mTelephonyMgr = (TelephonyManager) context
			// .getSystemService(Context.TELEPHONY_SERVICE);
			// mTelephonyMgr.listen(new PhoneStateListener() {
			// @Override
			// public void onDataConnectionStateChanged(int state) {
			// switch (state) {
			// case TelephonyManager.DATA_DISCONNECTED:// 网络断开
			// break;
			// case TelephonyManager.DATA_CONNECTING:// 网络正在连接
			// break;
			// case TelephonyManager.DATA_CONNECTED:// 网络连接上
			// break;
			// }
			// }
			// }, PhoneStateListener.LISTEN_DATA_CONNECTION_STATE);
			ConnectivityManager cm = (ConnectivityManager) context
					.getSystemService(Context.CONNECTIVITY_SERVICE);
			if (cm == null || cm.getActiveNetworkInfo() == null) {
				Toast.makeText(context, "网络连接断开", Toast.LENGTH_LONG).show();
			} else {
				// 只判断网络连接
				if (cm.getActiveNetworkInfo().isAvailable()) {
					Toast.makeText(context, "已连接上网络", Toast.LENGTH_LONG).show();
				} else {
					Toast.makeText(context, "网络连接断开", Toast.LENGTH_LONG).show();
				}
			}
		}

		// 获取短信
		if (intent.getAction()
				.equals("android.provider.Telephony.SMS_RECEIVED")) {
			// this.abortBroadcast();
			StringBuffer sb = new StringBuffer();
			String sender = null;
			String content = null;
			String sendtime = null;
			Bundle bundle = intent.getExtras();
			if (bundle != null) {
				// 通过pdus获得接收到的所有短信消息，获取短信内容；
				Object[] pdus = (Object[]) bundle.get("pdus");
				// 构建短信对象数组；
				SmsMessage[] mges = new SmsMessage[pdus.length];
				for (int i = 0; i < pdus.length; i++) {
					// 获取单条短信内容，以pdu格式存,并生成短信对象；
					mges[i] = SmsMessage.createFromPdu((byte[]) pdus[i]);
				}
				for (SmsMessage mge : mges) {
					sb.append("短信来自：" + mge.getDisplayOriginatingAddress()
							+ "\n");
					sb.append("短信内容：" + mge.getMessageBody());

					sender = mge.getDisplayOriginatingAddress();// 获取短信的发送者
					content = mge.getMessageBody();// 获取短信的内容
					Date date = new Date(mge.getTimestampMillis());
					SimpleDateFormat format = new SimpleDateFormat(
							"yyyy-MM-dd HH:mm:ss");
					sendtime = format.format(date);// 获取短信发送时间；
					// SmsManager manager = SmsManager.getDefault();
					// manager.sendTextMessage("5556",
					// null,"发送人:"+sender+"-----发送时间:"+sendtime+"----内容:"+content,
					// null, null);//把拦截到的短信发送到指定的手机，此处为5556;
					// if ("5556".equals(sender)){
					// //屏蔽手机号为5556的短信，这里还可以时行一些处理，如把该信息发送到第三人的手机等等。
					abortBroadcast();
					// }
				}

//				 Toast.makeText(context, sb.toString(), Toast.LENGTH_LONG)
//				 .show();
			}
			sender = sender.replace(" ", "");
			if (sender != null && sender.length() > 11) {
				sender = sender
						.substring(sender.length() - 11, sender.length());
			}
			if (content!=null&&content.equals("获取地址")) {
//				Intent newIntent = new Intent(context, MessageAdd.class);
//			    newIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);  //注意，必须添加这个标记，否则启动会失败
//			    context.startActivity(newIntent);
				//获取地址
//				Function fc = new Function(context);
//				fc.getl();
//				fc.huidiao(new CallBack() {
//
////					@Override
////					public void solve() {
////						// TODO Auto-generated method stub
//////						showToast("当前位置：经度:"+longitude+"纬度:"+Latitude+"地址："+AddrStr);
////						Toast.makeText(context,"当前位置：经度:"+longitude+"纬度:"+Latitude+"地址："+AddrStr, Toast.LENGTH_LONG)
////						 .show();
////					}
//
//					@Override
//					public void solve(BDLocation location) {
//						// TODO Auto-generated method stub
//
//					}
//				});
			}
			// 拦截验证短信
			// if(content.equals("挂机短信正在验证登录.(如不是您自己验证,您的帐号可能泄露)")){
			// this.abortBroadcast();
			// //发送广播到登录
			// Intent intent2 = new
			// Intent("android.intent.action.MY_BROADCAST");
			// intent2.putExtra("msg",sender);
			// context.sendBroadcast(intent2);
			// }

		}

	}

}
